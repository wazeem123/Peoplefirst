{"version":3,"sources":["styles/style.js","components/Form.jsx","App.js","serviceWorker.js","index.js","assets/micBtn.png"],"names":["style","micBtn","width","height","marginRight","marginLeft","position","top","backgroundSize","backgroundImage","border","borderRadius","field","padding","recognition","window","SpeechRecognition","webkitSpeechRecognition","continous","interimResults","lang","Form","props","state","last","middle","first","listening","firstname","lastname","company","email","onChangeLast","bind","onChangeMiddle","onChangeFirst","onChangeFirstname","onChangeLastname","onChangeEmail","onChangeCompany","toggleListenFirstname","toggleListenLastname","toggleListenEmail","toggleListenCompany","toggleListenLast","toggleListenMiddle","toggleListenFirst","handleListenFirstname","handleListenLastname","handleListenEmail","handleListenCompany","handleListenLast","handleListenMiddle","handleListenFirst","e","this","setState","target","value","document","getElementById","opacity","start","stop","onend","onstart","finalTranscript","onresult","event","interimTranscript","i","resultIndex","results","length","transcript","isFinal","transcriptArr","split","finalText","join","onerror","body","backgroundColor","marginTop","className","md","fontSize","class","aria-hidden","type","onChange","size","disabled","id","onClick","fontFamily","color","fluid","Date","getFullYear","href","Component","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.1afbd849.chunk.js","sourcesContent":["import micBtn from \"../assets/micBtn.png\";\r\n\r\nexport const style = {\r\n  micBtn: {\r\n    width: 35,\r\n    height: 35,\r\n    marginRight: 10,\r\n    marginLeft: 10,\r\n    position: \"relative\",\r\n    top: 10,\r\n    backgroundSize: \"contain\",\r\n    backgroundImage: `url(${micBtn})`,\r\n    border: \"1px solid black\",\r\n    borderRadius: 50\r\n  },\r\n  field: {\r\n    padding: 6\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { style } from \"../styles/style\";\r\nimport { Container, Row, Col } from \"react-grid-system\";\r\nimport { MDBContainer, MDBFooter } from \"mdbreact\";\r\n\r\nconst SpeechRecognitionInst =\r\n  window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst recognition = new SpeechRecognitionInst();\r\n\r\nrecognition.continous = false;\r\nrecognition.interimResults = true;\r\nrecognition.lang = \"en-US\";\r\n\r\nexport default class Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      last: \"\",\r\n      middle: \"\",\r\n      first: \"\",\r\n\r\n      listening: false,\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      company: \"\",\r\n      email: \"\"\r\n    };\r\n    this.onChangeLast = this.onChangeLast.bind(this);\r\n    this.onChangeMiddle = this.onChangeMiddle.bind(this);\r\n    this.onChangeFirst = this.onChangeFirst.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeCompany = this.onChangeCompany.bind(this);\r\n\r\n    this.toggleListenFirstname = this.toggleListenFirstname.bind(this);\r\n    this.toggleListenLastname = this.toggleListenLastname.bind(this);\r\n    this.toggleListenEmail = this.toggleListenEmail.bind(this);\r\n    this.toggleListenCompany = this.toggleListenCompany.bind(this);\r\n    this.toggleListenLast = this.toggleListenLast.bind(this);\r\n    this.toggleListenMiddle = this.toggleListenMiddle.bind(this);\r\n    this.toggleListenFirst = this.toggleListenFirst.bind(this);\r\n\r\n    this.handleListenFirstname = this.handleListenFirstname.bind(this);\r\n    this.handleListenLastname = this.handleListenLastname.bind(this);\r\n    this.handleListenEmail = this.handleListenEmail.bind(this);\r\n    this.handleListenCompany = this.handleListenCompany.bind(this);\r\n    this.handleListenLast = this.handleListenLast.bind(this);\r\n    this.handleListenMiddle = this.handleListenMiddle.bind(this);\r\n    this.handleListenFirst = this.handleListenFirst.bind(this);\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n  onChangeCompany(e) {\r\n    this.setState({\r\n      company: e.target.value\r\n    });\r\n  }\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value\r\n    });\r\n  }\r\n  onChangeLast(e) {\r\n    this.setState({\r\n      last: e.target.value\r\n    });\r\n  }\r\n  onChangeMiddle(e) {\r\n    this.setState({\r\n      middle: e.target.value\r\n    });\r\n  }\r\n  onChangeFirst(e) {\r\n    this.setState({\r\n      first: e.target.value\r\n    });\r\n  }\r\n\r\n  toggleListenFirst() {\r\n    document.getElementById(\"micBtnFirst\").style.opacity = 0.4;\r\n    this.setState(\r\n      {\r\n        listening: true\r\n      },\r\n      this.handleListenFirst\r\n    );\r\n  }\r\n\r\n  handleListenFirst() {\r\n    if (this.state.listening) {\r\n      recognition.start();\r\n    } else {\r\n      document.getElementById(\"micBtnFirst\").style.opacity = 1;\r\n      recognition.stop();\r\n      recognition.onend = () => {};\r\n    }\r\n    recognition.onstart = () => {};\r\n    let finalTranscript = \"\";\r\n    recognition.onresult = event => {\r\n      let interimTranscript = \"\";\r\n\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) finalTranscript += transcript + \" \";\r\n        else {\r\n          interimTranscript += transcript;\r\n          this.setState({\r\n            first: interimTranscript\r\n          });\r\n        }\r\n      }\r\n      const transcriptArr = finalTranscript.split(\" \");\r\n      recognition.onend = () => {\r\n        document.getElementById(\"micBtnFirst\").style.opacity = 1;\r\n        const finalText = transcriptArr.join(\" \");\r\n        this.setState({\r\n          listening: false,\r\n          first: finalText\r\n        });\r\n      };\r\n    };\r\n    recognition.onerror = event => {\r\n      this.setState({\r\n        listening: false\r\n      });\r\n      document.getElementById(\"micBtnFirst\").style.opacity = 1;\r\n    };\r\n  }\r\n\r\n  toggleListenMiddle() {\r\n    document.getElementById(\"micBtnMiddle\").style.opacity = 0.4;\r\n    this.setState(\r\n      {\r\n        listening: true\r\n      },\r\n      this.handleListenMiddle\r\n    );\r\n  }\r\n\r\n  handleListenMiddle() {\r\n    if (this.state.listening) {\r\n      recognition.start();\r\n    } else {\r\n      document.getElementById(\"micBtnMiddle\").style.opacity = 1;\r\n      recognition.stop();\r\n      recognition.onend = () => {};\r\n    }\r\n    recognition.onstart = () => {};\r\n    let finalTranscript = \"\";\r\n    recognition.onresult = event => {\r\n      let interimTranscript = \"\";\r\n\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) finalTranscript += transcript + \" \";\r\n        else {\r\n          interimTranscript += transcript;\r\n          this.setState({\r\n            middle: interimTranscript\r\n          });\r\n        }\r\n      }\r\n      const transcriptArr = finalTranscript.split(\" \");\r\n      recognition.onend = () => {\r\n        document.getElementById(\"micBtnMiddle\").style.opacity = 1;\r\n        const finalText = transcriptArr.join(\" \");\r\n        this.setState({\r\n          listening: false,\r\n          middle: finalText\r\n        });\r\n      };\r\n    };\r\n    recognition.onerror = event => {\r\n      this.setState({\r\n        listening: false\r\n      });\r\n      document.getElementById(\"micBtnMiddle\").style.opacity = 1;\r\n    };\r\n  }\r\n\r\n  toggleListenLast() {\r\n    document.getElementById(\"micBtnLast\").style.opacity = 0.4;\r\n    this.setState(\r\n      {\r\n        listening: true\r\n      },\r\n      this.handleListenLast\r\n    );\r\n  }\r\n\r\n  handleListenLast() {\r\n    if (this.state.listening) {\r\n      recognition.start();\r\n    } else {\r\n      document.getElementById(\"micBtnLast\").style.opacity = 1;\r\n      recognition.stop();\r\n      recognition.onend = () => {};\r\n    }\r\n    recognition.onstart = () => {};\r\n    let finalTranscript = \"\";\r\n    recognition.onresult = event => {\r\n      let interimTranscript = \"\";\r\n\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) finalTranscript += transcript + \" \";\r\n        else {\r\n          interimTranscript += transcript;\r\n          this.setState({\r\n            last: interimTranscript\r\n          });\r\n        }\r\n      }\r\n      const transcriptArr = finalTranscript.split(\" \");\r\n      recognition.onend = () => {\r\n        document.getElementById(\"micBtnLast\").style.opacity = 1;\r\n        const finalText = transcriptArr.join(\" \");\r\n        this.setState({\r\n          listening: false,\r\n          last: finalText\r\n        });\r\n      };\r\n    };\r\n    recognition.onerror = event => {\r\n      this.setState({\r\n        listening: false\r\n      });\r\n      document.getElementById(\"micBtnLast\").style.opacity = 1;\r\n    };\r\n  }\r\n\r\n  toggleListenFirstname() {\r\n    document.getElementById(\"micBtnFirstname\").style.opacity = 0.4;\r\n    this.setState(\r\n      {\r\n        listening: true\r\n      },\r\n      this.handleListenFirstname\r\n    );\r\n  }\r\n\r\n  handleListenFirstname() {\r\n    if (this.state.listening) {\r\n      recognition.start();\r\n    } else {\r\n      document.getElementById(\"micBtnFirstname\").style.opacity = 1;\r\n      recognition.stop();\r\n      recognition.onend = () => {};\r\n    }\r\n    recognition.onstart = () => {};\r\n    let finalTranscript = \"\";\r\n    recognition.onresult = event => {\r\n      let interimTranscript = \"\";\r\n\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) finalTranscript += transcript + \" \";\r\n        else {\r\n          interimTranscript += transcript;\r\n          this.setState({\r\n            firstname: interimTranscript\r\n          });\r\n        }\r\n      }\r\n      const transcriptArr = finalTranscript.split(\" \");\r\n      recognition.onend = () => {\r\n        document.getElementById(\"micBtnFirstname\").style.opacity = 1;\r\n        const finalText = transcriptArr.join(\" \");\r\n        this.setState({\r\n          listening: false,\r\n          firstname: finalText\r\n        });\r\n      };\r\n    };\r\n    recognition.onerror = event => {\r\n      this.setState({\r\n        listening: false\r\n      });\r\n      document.getElementById(\"micBtnFirstname\").style.opacity = 1;\r\n    };\r\n  }\r\n\r\n  toggleListenLastname() {\r\n    document.getElementById(\"micBtnFirstname\").style.opacity = 0.4;\r\n    this.setState(\r\n      {\r\n        listening: true\r\n      },\r\n      this.handleListenLastname\r\n    );\r\n  }\r\n\r\n  handleListenLastname() {\r\n    if (this.state.listening) {\r\n      recognition.start();\r\n    } else {\r\n      document.getElementById(\"micBtnLastname\").style.opacity = 1;\r\n      recognition.stop();\r\n      recognition.onend = () => {};\r\n    }\r\n    recognition.onstart = () => {};\r\n    let finalTranscript = \"\";\r\n    recognition.onresult = event => {\r\n      let interimTranscript = \"\";\r\n\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) finalTranscript += transcript + \" \";\r\n        else {\r\n          interimTranscript += transcript;\r\n          this.setState({\r\n            lastname: interimTranscript\r\n          });\r\n        }\r\n      }\r\n      const transcriptArr = finalTranscript.split(\" \");\r\n      recognition.onend = () => {\r\n        document.getElementById(\"micBtnLastname\").style.opacity = 1;\r\n        const finalText = transcriptArr.join(\" \");\r\n        this.setState({\r\n          listening: false,\r\n          lastname: finalText\r\n        });\r\n      };\r\n    };\r\n    recognition.onerror = event => {\r\n      this.setState({\r\n        listening: false\r\n      });\r\n      document.getElementById(\"micBtnLastname\").style.opacity = 1;\r\n    };\r\n  }\r\n\r\n  toggleListenEmail() {\r\n    document.getElementById(\"micBtnEmail\").style.opacity = 0.4;\r\n    this.setState(\r\n      {\r\n        listening: true\r\n      },\r\n      this.handleListenEmail\r\n    );\r\n  }\r\n\r\n  handleListenEmail() {\r\n    if (this.state.listening) {\r\n      recognition.start();\r\n    } else {\r\n      document.getElementById(\"micBtnEmail\").style.opacity = 1;\r\n      recognition.stop();\r\n      recognition.onend = () => {};\r\n    }\r\n    recognition.onstart = () => {};\r\n    let finalTranscript = \"\";\r\n    recognition.onresult = event => {\r\n      let interimTranscript = \"\";\r\n\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) finalTranscript += transcript + \" \";\r\n        else {\r\n          interimTranscript += transcript;\r\n          this.setState({\r\n            email: interimTranscript\r\n          });\r\n        }\r\n      }\r\n      const transcriptArr = finalTranscript.split(\" \");\r\n      recognition.onend = () => {\r\n        document.getElementById(\"micBtnEmail\").style.opacity = 1;\r\n        const finalText = transcriptArr.join(\" \");\r\n        this.setState({\r\n          listening: false,\r\n          email: finalText\r\n        });\r\n      };\r\n    };\r\n    recognition.onerror = event => {\r\n      this.setState({\r\n        listening: false\r\n      });\r\n      document.getElementById(\"micBtnEmail\").style.opacity = 1;\r\n    };\r\n  }\r\n\r\n  toggleListenCompany() {\r\n    document.getElementById(\"micBtnCompany\").style.opacity = 0.4;\r\n    this.setState(\r\n      {\r\n        listening: true\r\n      },\r\n      this.handleListenCompany\r\n    );\r\n  }\r\n\r\n  handleListenCompany() {\r\n    if (this.state.listening) {\r\n      recognition.start();\r\n    } else {\r\n      document.getElementById(\"micBtnCompany\").style.opacity = 1;\r\n      recognition.stop();\r\n      recognition.onend = () => {};\r\n    }\r\n    recognition.onstart = () => {};\r\n    let finalTranscript = \"\";\r\n    recognition.onresult = event => {\r\n      let interimTranscript = \"\";\r\n\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) finalTranscript += transcript + \" \";\r\n        else {\r\n          interimTranscript += transcript;\r\n          this.setState({\r\n            company: interimTranscript\r\n          });\r\n        }\r\n      }\r\n      const transcriptArr = finalTranscript.split(\" \");\r\n      recognition.onend = () => {\r\n        document.getElementById(\"micBtnCompany\").style.opacity = 1;\r\n        const finalText = transcriptArr.join(\" \");\r\n        this.setState({\r\n          listening: false,\r\n          company: finalText\r\n        });\r\n      };\r\n    };\r\n    recognition.onerror = event => {\r\n      this.setState({\r\n        listening: false\r\n      });\r\n      document.getElementById(\"micBtnCompany\").style.opacity = 1;\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = \"white\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: 50 }}>\r\n        <form>\r\n          <Container>\r\n            <div className=\"p-2 col-example text-left\">\r\n              <Row>\r\n                <Col md={2}></Col>\r\n                <Col md={8}>\r\n                  <font style={{ fontSize: 17 }}>\r\n                    Name{\" \"}\r\n                    <span class=\"required\" aria-hidden=\"true\">\r\n                      *\r\n                    </span>{\" \"}\r\n                  </font>\r\n                  <br />\r\n                  <input\r\n                    class=\"field-element text\"\r\n                    style={style.field}\r\n                    type=\"text\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChangeFirstname}\r\n                    size=\"40\"\r\n                  />\r\n\r\n                  <input\r\n                    disabled={this.state.listening}\r\n                    type=\"button\"\r\n                    style={style.micBtn}\r\n                    id={\"micBtnFirstname\"}\r\n                    onClick={() => {\r\n                      this.toggleListenFirstname();\r\n                    }}\r\n                  />\r\n                  <input\r\n                    style={style.field}\r\n                    type=\"text\"\r\n                    value={this.state.lastname}\r\n                    onChange={this.onChangeLastname}\r\n                    size=\"40\"\r\n                  />\r\n                  <input\r\n                    disabled={this.state.listening}\r\n                    type=\"button\"\r\n                    style={style.micBtn}\r\n                    id={\"micBtnLastname\"}\r\n                    onClick={() => {\r\n                      this.toggleListenLastname();\r\n                    }}\r\n                  />\r\n                  <Row>\r\n                    <Col md={4}>FirstName</Col>\r\n                    <Col md={4} style={{ marginLeft: 90 }}>\r\n                      LastName\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n\r\n                <Col md={2}></Col>\r\n              </Row>\r\n            </div>\r\n\r\n            <br />\r\n            <div className=\"p-2 col-example text-left\">\r\n              <Row>\r\n                <Col md={2}></Col>\r\n                <Col md={8}>\r\n                  <font style={{ fontSize: 17, fontFamily: \"Open Sans\" }}>\r\n                    Company{\" \"}\r\n                    <span class=\"required\" aria-hidden=\"true\">\r\n                      *\r\n                    </span>\r\n                  </font>\r\n                  <br />\r\n\r\n                  <input\r\n                    style={style.field}\r\n                    type=\"text\"\r\n                    value={this.state.company}\r\n                    onChange={this.onChangeCompany}\r\n                    size=\"97\"\r\n                  />\r\n\r\n                  <input\r\n                    disabled={this.state.listening}\r\n                    type=\"button\"\r\n                    style={style.micBtn}\r\n                    id={\"micBtnCompany\"}\r\n                    onClick={() => {\r\n                      this.toggleListenCompany();\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col md={2}></Col>\r\n              </Row>\r\n            </div>\r\n            <br />\r\n            <div className=\"p-2 col-example text-left\">\r\n              <Row>\r\n                <Col md={2}></Col>\r\n                <Col md={8}>\r\n                  <font style={{ fontSize: 17 }}>\r\n                    Email Address{\" \"}\r\n                    <span class=\"required\" aria-hidden=\"true\">\r\n                      *\r\n                    </span>\r\n                  </font>\r\n                  <br />\r\n\r\n                  <input\r\n                    style={style.field}\r\n                    type=\"text\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    size=\"97\"\r\n                  />\r\n\r\n                  <input\r\n                    disabled={this.state.listening}\r\n                    type=\"button\"\r\n                    style={style.micBtn}\r\n                    id={\"micBtnEmail\"}\r\n                    onClick={() => {\r\n                      this.toggleListenEmail();\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col md={2}></Col>\r\n              </Row>\r\n            </div>\r\n            <br />\r\n            <div className=\"p-2 col-example text-left\">\r\n              <Row>\r\n                <Col md={2}></Col>\r\n                <Col md={8}>\r\n                  <font style={{ fontSize: 17 }}>Phone</font>\r\n                  <br />\r\n\r\n                  <input\r\n                    style={style.field}\r\n                    type=\"text\"\r\n                    value={this.state.first}\r\n                    onChange={this.onChangeFirst}\r\n                    size=\"5\"\r\n                  />\r\n\r\n                  <input\r\n                    disabled={this.state.listening}\r\n                    type=\"button\"\r\n                    style={style.micBtn}\r\n                    id={\"micBtnFirst\"}\r\n                    onClick={() => {\r\n                      this.toggleListenFirst();\r\n                    }}\r\n                  />\r\n                  <input\r\n                    style={style.field}\r\n                    type=\"text\"\r\n                    value={this.state.middle}\r\n                    onChange={this.onChangeMiddle}\r\n                    size=\"5\"\r\n                  />\r\n\r\n                  <input\r\n                    disabled={this.state.listening}\r\n                    type=\"button\"\r\n                    style={style.micBtn}\r\n                    id={\"micBtnMiddle\"}\r\n                    onClick={() => {\r\n                      this.toggleListenMiddle();\r\n                    }}\r\n                  />\r\n                  <input\r\n                    style={style.field}\r\n                    type=\"text\"\r\n                    value={this.state.last}\r\n                    onChange={this.onChangeLast}\r\n                    size=\"7\"\r\n                  />\r\n                  <input\r\n                    disabled={this.state.listening}\r\n                    type=\"button\"\r\n                    style={style.micBtn}\r\n                    id={\"micBtnLast\"}\r\n                    onClick={() => {\r\n                      this.toggleListenLast();\r\n                    }}\r\n                  />\r\n                  <Row>\r\n                    <Col md={2}>(###)</Col>\r\n                    <Col md={2} style={{ marginLeft: 5 }}>\r\n                      ###\r\n                    </Col>\r\n                    <Col md={2} style={{ marginLeft: 5 }}>\r\n                      ####\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col md={2}></Col>\r\n              </Row>\r\n            </div>\r\n            <br />\r\n          </Container>\r\n        </form>\r\n\r\n        <div style={{ marginTop: 20 }}>\r\n          <MDBFooter color=\"blue\" className=\"font-small pt-4 mt-4\">\r\n            <div className=\"footer-copyright text-center py-3\">\r\n              <MDBContainer fluid>\r\n                &copy; {new Date().getFullYear()} Copyright:{\" \"}\r\n                <a style={{ color: \"black\" }} href=\"https://www.pulztec.com/\">\r\n                  {\" \"}\r\n                  Pulz Technologies{\" \"}\r\n                </a>\r\n              </MDBContainer>\r\n            </div>\r\n          </MDBFooter>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport Form from \"./components/Form\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/micBtn.d32fe79f.png\";"],"sourceRoot":""}